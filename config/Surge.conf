[General]
# ================ iOS和MacOS共同的 Surge 参数 ================ #
# > 日志级别 verbose, info, notify, or warning 不建议在日常使用中启用详细，因为这会显著降低性能。
loglevel = notify
# > IPv6协议 启用完整的 IPv6 支持。具体来说，开启该选项后，访问域名时会查询该域名的AAAA记录。即使未启用此选项，也可以通过直接访问 IPv6 地址来访问 IPv6 站点。
ipv6 = false
# > 允许 IPv6 通过 Surge VIF。当您希望 Surge 处理连接到 IPv6 地址的原始 TCP 连接时很有用。
# > off ：切勿使用 IPv6 设置 Surge VIF
# > auto ：仅当本地网络具有有效的 IPv6 网络时，才使用 IPv6 设置 Surge VIF
# > always ：始终使用 IPv6 设置 Surge VIF
ipv6-vif = disabled
# > dns服务器 上游DNS服务器的IP地址
dns-server = system, 223.6.6.6, 223.5.5.5, 119.29.29.29
# doh-server = https://223.5.5.5/dns-query, https://1.12.12.12/dns-query, https://8.8.8.8/dns-query, https://1.1.1.1/dns-query
# > 跳过代理 在 iOS 版本中，此选项强制与这些域/IP 范围的连接由 Surge VIF 而不是 Surge 代理处理。在 macOS 版本中，当启用“设置为系统代理”时，这些设置将应用于系统。此选项用于修复某些应用的兼容性问题。
# > apple.com、*apple.com、192.168.2.* or 192.168.2.0/24
# > 注意：如果输入 IP 地址或地址范围，则只有在使用该地址连接到该主机时才能绕过代理，而不能在通过解析为该地址的域名连接到主机时绕过代理。
skip-proxy = 192.168.0.0/24, 10.0.0.0/8, 172.16.0.0/12, 127.0.0.1, localhost, *.local
# > 排除简单主机名 就像 skip-proxy 参数一样。此选项允许请求使用由 Surge VIF 而不是 Surge 代理处理的简单主机名（不带点）。
# > mysql01、redis01
exclude-simple-hostnames = true
# > 外部控制器访问 此选项允许外部控制器控制 Surge，例如 Surge Dashboard （macOS） 和 Surge iOS 遥控器 （iOS）。例如：key@0.0.0.0:6166
external-controller-access = mima1234@0.0.0.0:6166
# > 使用 HTTPS 协议而不是 HTTP。必须先配置 MitM CA 证书。您需要在客户端设备上手动安装证书。
# http-api-tls =
# > 启用此功能后，您可以通过 Web 浏览器控制 Surge。
# > 远程控制器
http-api-web-dashboard = true
use-default-policy-if-wifi-not-primary = false
# > 显示错误页面拒绝,如果请求是纯 HTTP 请求，则显示 REJECT 策略的错误网页。
show-error-page-for-reject = true
# > Surge VIF只能处理 TCP 和 UDP 协议。使用此选项可绕过特定 IP 范围，以允许所有流量通过。
# > 注意：此选项仅适用于Surge VIF。Surge Proxy Server 处理的请求不受影响。合并 skip-proxy 并确保 tun-excluded-routes 特定 HTTP 流量绕过 Surge。
# tun-excluded-routes = 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12
# > 默认情况下，Surge VIF 接口将自身声明为默认路由。但是，由于 Wi-Fi 接口的路由较小，因此某些流量可能无法通过浪涌 VIF 接口。使用此选项可添加较小的路由。
# tun-included-routes = 192.168.1.12/32
# > Internet 连接测试的 URL, 以及，DIRECT 策略的测试 URL
internet-test-url = http://www.baidu.com
# > 代理策略的默认测试 URL
proxy-test-url = http://www.apple.com/library/test/success.html
# > 连接测试超时（秒）
test-timeout = 2
# > 始终真实的 IP 此选项要求 Surge 在 Surge VIF 处理 DNS 问题时返回真实 IP 地址而不是虚假 IP 地址 DNS数据包将被转发到上游DNS服务器 此参数属于主机列表类型，详细规则请参见：https://manual.nssurge.com/others/host-list.html
# > 使用前缀 - 排除主机名
# > 支持通配符 * 和 ?
# > 使用后缀 :port 匹配其他端口,如果未提供端口号，则 Surge 将自动为该参数附加标准端口号，就像 force-http-engine-hosts 参数一样，如果仅配置了主机名，则仅对端口 80 有效。对于 MITM 功能，它仅对端口 443 有效。
# > 使用后缀 :0 以匹配所有端口
# > 使用<ip-address> 直接使用 IPv4/IPv6 地址（而不是域）匹配所有主机名
# > -*icloud*, -*.mzstatic.com, -*.facebook.com, -*.instagram.com, -*.twitter.com, -*dropbox*, -*apple*, -*.amazonaws.com, -<ip-address>, *
always-real-ip = *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.battlenet.com.cn, *.battlenet.com, *.blzstatic.cn, *.battle.net
# > 劫持DNS,默认情况下，Surge 仅返回发送到 Surge DNS 地址 （198.18.0.2） 的 DNS 查询的虚假 IP 地址。发送到标准 DNS 的查询将被转发。某些设备或软件始终使用硬编码的 DNS 服务器。（例如，Google Speakers始终使用 8.8.8.8）。您可以使用此选项劫持查询以获取虚假地址。您可以使用 hijack-dns = *:53 劫持所有DNS查询
hijack-dns = 8.8.8.8:53, 8.8.4.4:53
# > 从 /etc/hosts 读取 DNS 记录
read-etc-hosts = true
# > 使 Surge 将 TCP 连接视为 HTTP 请求。Surge HTTP 引擎将处理请求，并且所有高级功能都将可用，例如捕获、重写和脚本编写。此参数属于主机列表类型，详细规则请参见：https://manual.nssurge.com/others/host-list.html
# force-http-engine-hosts =
# > 加密 DNS 跟随出站模式,默认情况下，加密的 DNS 查找使用直接出站。启用该选项将使 DOH 遵循出站模式设置和规则。
encrypted-dns-follow-outbound-mode = true
# > 加密的 DNS 服务器,加密的 DNS 服务器的 URL。如果配置了加密 DNS，则传统 DNS 将仅用于测试连接并解析加密 DNS URL 中的域。
encrypted-dns-server = https://223.5.5.5/dns-query
# https://8.8.8.8/dns-query, https://1.1.1.1/dns-query
# > 跳过加密的DNS服务器证书验证，这是不安全的。
encrypted-dns-skip-cert-verification = false
# > 使用本地主机代理,默认情况下，如果使用代理策略，则始终在远程服务器上执行 DNS 查找。启用此选项后，如果存在目标域的本地 DNS 映射结果，则 Surge 会使用 IP 地址而不是域来设置代理连接。
use-local-host-item-for-proxy = false
# > 要更新的 GeoIP 数据库的 URL
geoip-maxmind-url = https://github.com/Hackl0us/GeoIP2-CN/raw/release/Country.mmdb
# > 禁用 GeoIP 数据库的自动更新
disable-geoip-db-auto-update = true
# > iOS 系统可能会执行 SVCB 记录 DNS 查找，而不是标准 A 记录查找。这会导致 Surge 无法返回虚拟 IP 地址。因此，默认情况下，禁止 SVCB 记录查找，以强制系统执行 A 记录查找。
allow-dns-svcb = false
# > UDP 流量与不支持 UDP 中继的策略匹配时的回退行为,可能的值： DIRECT 、 REJECT, 如果没有代理服务器支持 UDP 转发，可修改为「 direct 」或注释下条，但需注意同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
udp-policy-not-supported-behaviour = reject
# > 代理的默认 UDP 测试参数, 例如： apple.com@8.8.8.8
# proxy-test-udp = apple.com@8.8.8.8
# > 当系统负载非常高且数据包处理延迟时，启用将优先处理 UDP 数据包。也称为游戏模式
udp-priority = false
# > Surge 将自动嗅探发送到端口 80 和 443 的 TCP 请求的协议，从而在优化性能的同时启用高级 HTTP/HTTPS 功能。但是，这可能会导致一些兼容性问题。如果遇到问题，可以在此处添加主机名，Surge 不会嗅探这些请求的协议。此参数属于主机列表类型，详细规则请参见：https://manual.nssurge.com/others/host-list.html
always-raw-tcp-hosts = *.baidu.com
# ================ 仅限 iOS 的 Surge 参数 ================ #
# > 允许 wifi 访问,允许 Surge 代理服务从 LAN 中的其他设备访问。
allow-wifi-access = false
# > Surge HTTP 代理服务的端口号
wifi-access-http-port = 6152
# > Surge SOCKS5 代理服务的端口号
wifi-access-socks5-port = 6153
# > 要求对 Surge HTTP 代理服务进行身份验证。例如：用户名：密码
wifi-access-http-auth = surge:mima1234
# > 启用 Wi-Fi 助手 (在 Wi-Fi 网络不佳时尝试使用数据网络建立连接，请仅当使用不限量的数据流量时开启)
wifi-assist = false
# > 隐藏状态栏中的 VPN 图标
hide-vpn-icon = false
# > 当 Wi-Fi 网络较差时，不要设置与蜂窝数据的连接，而是始终同时设置与 Wi-Fi 和蜂窝数据的连接 此选项可以在 Wi-Fi 较差或 Wi-Fi 网络切换时显著改善网络体验 此功能将应用于所有 TCP 连接和 DNS 查找。仅当您拥有无限的蜂窝数据计划时才启用它
all-hybrid = false
# > 允许在“个人热点”打开时从其他设备访问 Surge 代理服务
allow-hotspot-access = ture
# > 包含所有网络,默认情况下，某些请求可能不会被 Surge 接管。例如，应用程序可以绑定到物理网络接口以绕过浪涌 VIF。启用“包括所有网络”选项，以确保所有请求都由 Surge 处理而不会泄漏。当您使用 Surge 作为防火墙时，此选项很有用。（需要 iOS 14.0 或以上版本）,启用此选项可能会导致 AirDrop 和 Xcode 调试问题、通过 USB 的 Surge Dashboard 无法正常工作以及其他意外的副作用。请谨慎使用。
include-all-networks = false
# > 包含本地网络,启用此选项可使 Surge VIF 处理发送到 LAN 的请求。（需要 iOS 14.2 或更高版本）启用此选项可能会导致 AirDrop 和 Xcode 调试问题、通过 USB 的 Surge Dashboard 无法正常工作以及其他意外的副作用。请谨慎使用。必须与 include-all-networks=true 结合使用。
include-local-networks = false
# > 启用此选项可使 Surge VIF 处理 Apple 推送通知服务 （APNs） 的网络流量。必须与 include-all-networks=true 结合使用。
include-apns = false
# > 启用此选项可使 Surge VIF 处理蜂窝服务的 Internet 可路由网络流量。（VoLTE、Wi-Fi 通话、IMS、彩信、可视语音信箱等）.请注意，某些蜂窝运营商会绕过互联网，将蜂窝网络服务流量直接路由到运营商网络。此类蜂窝服务流量始终被排除在隧道之外。必须与 include-all-networks=true 结合使用。
include-cellular-services = false
# > 兼容性模式,此选项用于控制 Surge iOS 的工作模式。
# > 0：自动，在 5.8.0 之前的 Surge iOS 版本中，这相当于 1，从 5.8.0 开始，它相当于 3
# > 1：代理接管 + VIF，在此模式下，代理接管的优先级高于 VIF 接管，提供最佳性能，但某些应用程序可能会检查代理设置并拒绝工作。
# > 2：仅代理接管
# > 3：VIF Takeover Only：最新版本的默认工作模式。
# > 4：代理接管 + VIF，但代理使用 VIF 地址而不是环回地址。
# > 5：代理接管+VIF，但VIF路由使用多个较小的路由进行接管，没有配置默认路由，可以用来绕过一些特殊问题。（例如，HomeKit 安防摄像头）
compatibility-mode = 3

[Proxy]
#!include

[Proxy Group]
# > 策略组（下面的节点信息需与外部节点对应，若删除了外部节点里的节点，那么在策略组里也要删除。）
Proxy = select, 🇭🇰 香港, 🇨🇳 台湾, 🇯🇵 日本, 🇸🇬 狮城, 🇺🇸 美国, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/Global.png
Others = select, include-other-group=Cloud One, update-interval=0, no-alert=0, hidden=0, include-all-proxies=0, policy-regex-filter=^((?!佣金|官网|免翻|到期|流量|更新|点外|重置|免流|Direct|GB|Days|Date|Expire|Premium|港|HK|hk|Hong Kong|HongKong|hongkong|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|台|新北|彰化|TW|Taiwan|狮城|狮|新加坡|坡|SG|Singapore).)*$, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/Final.png
Apple = select, DIRECT, 🇭🇰 香港, 🇨🇳 台湾, 🇯🇵 日本, 🇸🇬 狮城, 🇺🇸 美国, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/Apple.png
OpenAI = select, 🇺🇸 美国, 🇭🇰 香港, 🇨🇳 台湾, 🇯🇵 日本, 🇸🇬 狮城, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/AIA.png
TikTok = select, 🇺🇸 美国, 🇭🇰 香港, 🇨🇳 台湾, 🇯🇵 日本, 🇸🇬 狮城, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/TikTok.png
Telegram = select, Proxy, 🇭🇰 香港, 🇨🇳 台湾, 🇯🇵 日本, 🇸🇬 狮城, 🇺🇸 美国, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/Telegram.png
BiliBili = select, DIRECT, 🇭🇰 香港, 🇨🇳 台湾,🇲🇴 澳门, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/bilibili.png
YouTube = select, Proxy, 🇭🇰 香港, 🇨🇳 台湾, 🇯🇵 日本, 🇸🇬 狮城, 🇺🇸 美国, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/YouTube.png
# Spotify = select, DIRECT, Proxy, 🇭🇰 香港, 🇨🇳 台湾, 🇯🇵 日本, 🇸🇬 狮城, 🇺🇸 美国, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/Spotify.png
# Netflix = select, 🇨🇳 台湾, 🇭🇰 香港, 🇯🇵 日本, 🇸🇬 狮城, 🇺🇸 美国, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/Netflix.png
# Disney+ = select, Proxy, 🇭🇰 香港, 🇨🇳 台湾, 🇯🇵 日本, 🇸🇬 狮城, 🇺🇸 美国, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/Disney+.png
# Microsoft = select, DIRECT, Proxy, 🇭🇰 香港, 🇨🇳 台湾, 🇯🇵 日本, 🇸🇬 狮城, 🇺🇸 美国, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/Microsoft.png
# GlobalMedia = select, Proxy, 🇭🇰 香港, 🇨🇳 台湾, 🇯🇵 日本, 🇸🇬 狮城, 🇺🇸 美国, Others, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/HKMTMedia.png

# > 外部节点
🇭🇰 香港 = smart, include-other-group=Cloud One, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*Premium).*(?:港|香港|湾仔|港仔|九龙|hong|HK|HongKong|HKG|🇭🇰).*$, icon-url=https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Hong_Kong.png

🇨🇳 台湾 = smart, include-other-group=Cloud One, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*Premium).*(?:台|台湾|台北|新竹|台中|桃园|台南|高雄|花莲|TW|Tai|Taiwan|🇨🇳).*$, icon-url=https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/China.png

🇯🇵 日本 = smart, include-other-group=Cloud One, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*Premium).*(?:日本|东京|大阪|名古屋|福冈|仙台|京都|川日|泉日|埼玉|沪日|深日|JP|Japan|🇯🇵|[^-]日).*$, icon-url=https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Japan.png

🇸🇬 狮城 = smart, include-other-group=Cloud One, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*Premium).*(?:狮城|坡|新加坡|🇸🇬|SG|Singapore).*$, icon-url=https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Singapore.png

🇺🇸 美国 = smart, include-other-group=Cloud One, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*Premium).*(?:美|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|华盛顿|内华达|蒙大纳|怀俄明州|菲尼克斯|阿尔伯克基|丹佛|哥伦比亚|🇺🇸|US|United States).*$, icon-url=https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/United_States.png

🇲🇴 澳门 = smart, include-other-group=Cloud One, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*Premium).*(?:澳|澳门|澳門|Macau|Macao|澳门特别行政区|Macau SAR|Macao SAR|🇲🇴).*$, icon-url=https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Macao.png

🇰🇷 韩国 = smart, include-other-group=Cloud One, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*Premium).*(?:韩|韓|韩国|首尔|Korea|South Korea|KR|🇰🇷).*$, icon-url=https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/South_Korea.png

Cloud One = select, policy-path=你的订阅地址, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, icon-url=https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Final.png

#参考备用（surge）
# 🔰 节点选择 = select, ♻️ 自动选择, 🛃 手动切换, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇸 美国节点, 🇨🇳 台湾节点, 🇰🇷 韩国节点, 🇸🇬 新加坡节点, 🌎 其他节点, 🎯 全球直连, ⛔️ 禁止访问
# ♻️ 自动选择 = url-test, include-all-proxies=1, policy-regex-filter=^((?!佣金|官网|免翻|到期|流量|更新|点外|重置|免流|Direct|GB|Days|Date|Expire|Premium).)*$, url=http://1.0.0.1/generate_204, interval=300, tolerance=50
# 🛃 手动切换 = select, include-all-proxies=1, policy-regex-filter=^((?!佣金|官网|免翻|到期|流量|更新|点外|重置|免流|Direct|GB|Days|Date|Expire|Premium).)*$
# 🇭🇰 香港节点 = url-test, include-all-proxies=1, policy-regex-filter=^(?!.*Premium).*(?:港|HK|hk|Hong Kong|HongKong|hongkong).*$, url=http://1.0.0.1/generate_204, interval=300, tolerance=50
# 🇯🇵 日本节点 = url-test, include-all-proxies=1, policy-regex-filter=^(?!.*Premium).*(?:日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan).*$, url=http://1.0.0.1/generate_204, interval=300, tolerance=50
# 🇺🇸 美国节点 = url-test, include-all-proxies=1, policy-regex-filter=^(?!.*Premium).*(?:美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States).*$, url=http://1.0.0.1/generate_204, interval=300, tolerance=50
# 🇨🇳 台湾节点 = url-test, include-all-proxies=1, policy-regex-filter=^(?!.*Premium).*(?:台|新北|彰化|TW|Taiwan).*$, url=http://1.0.0.1/generate_204, interval=300, tolerance=50
# 🇰🇷 韩国节点 = url-test, include-all-proxies=1, policy-regex-filter=^(?!.*Premium).*(?:KR|Korea|KOR|首尔|韩|韓).*$, url=http://1.0.0.1/generate_204, interval=300, tolerance=50
# 🇸🇬 新加坡节点 = url-test, include-all-proxies=1, policy-regex-filter=^(?!.*Premium).*(?:新加坡|坡|狮城|SG|Singapore).*$, url=http://1.0.0.1/generate_204, interval=300, tolerance=50
# 🌎 其他节点 = url-test, include-all-proxies=1, policy-regex-filter=^((?!佣金|官网|免翻|到期|流量|更新|点外|重置|免流|Direct|GB|Days|Date|Expire|Premium|港|HK|hk|Hong Kong|HongKong|hongkong|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|台|新北|彰化|TW|Taiwan|KR|Korea|KOR|首尔|韩|韓|狮城|狮|新加坡|坡|SG|Singapore).)*$, interval=300, tolerance=50


[Rule]
# > Anti-AD
DOMAIN-SET,https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge2.txt,REJECT,pre-matching,extended-matching
# > Apple
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Apple/Apple_All_No_Resolve.list,Apple
# > OpenAI
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/OpenAI/OpenAI.list,OpenAI
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Gemini/Gemini.list,OpenAI
# > GitHub
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/GitHub/GitHub.list,Proxy
# > Microsoft
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Microsoft/Microsoft.list,Microsoft
# > Telegram
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Telegram/Telegram.list,Telegram
# > 流媒体
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/TikTok/TikTok.list,TikTok
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list,YouTube
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/BiliBili/BiliBili.list,BiliBili
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Spotify/Spotify.list,Spotify
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Netflix/Netflix.list,Netflix
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Disney/Disney.list,Disney+
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/ChinaMedia/ChinaMedia.list,DIRECT
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/GlobalMedia/GlobalMedia_All_No_Resolve.list,GlobalMedia
# > Proxy
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Proxy/Proxy_All_No_Resolve.list,Proxy,extended-matching
# > China
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/ChinaMax/ChinaMax_All.list,DIRECT,extended-matching
# > 局域网地址
RULE-SET,LAN,DIRECT
# > DNS 查询失败走Final规则
FINAL,Proxy,dns-failed


[URL Rewrite]
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302
^https?:\/\/(ditu|maps).google\.cn https://maps.google.com 302
